#test3
import random
import os

class WanderingGame:
    def __init__(self, grid_size, num_players):
        self.grid_size = grid_size
        self.num_players = num_players
        self.player_positions = {}
        self.destination_points = {}

    def generate_positions(self):
        # Generate unique random positions for each player and destination point
        positions = []
        for _ in range(2 * self.num_players):
            while True:
                pos = [random.randint(0, self.grid_size - 1), random.randint(0, self.grid_size - 1)]
                if pos not in positions:
                    positions.append(pos)
                    break
        return positions

    def initialize_game(self):
        # Initialize player positions and destination points
        positions = self.generate_positions()
        for i in range(self.num_players):
            self.player_positions[chr(ord('A') + i)] = positions[i]
            self.destination_points[chr(ord('A') + i)] = positions[self.num_players + i]

    def move_player(self, player, direction):
        # Update player position based on movement
        if direction == 'up' and self.player_positions[player][0] > 0:
            self.player_positions[player][0] -= 1
        elif direction == 'down' and self.player_positions[player][0] < self.grid_size - 1:
            self.player_positions[player][0] += 1
        elif direction == 'left' and self.player_positions[player][1] > 0:
            self.player_positions[player][1] -= 1
        elif direction == 'right' and self.player_positions[player][1] < self.grid_size - 1:
            self.player_positions[player][1] += 1

    def check_win_condition(self, player):
        # Check if player has reached the destination point
        return self.player_positions[player] == self.destination_points[player]

    def display_grid(self):
        # Display grid with player positions and destination points
        os.system('cls' if os.name == 'nt' else 'clear')  # Clear the console
        for i in range(self.grid_size):
            for j in range(self.grid_size):
                found_player = False
                for player, pos in self.player_positions.items():
                    if pos == [i, j]:
                        print(player, end=" ")  # Player position
                        found_player = True
                        break
                if not found_player:
                    for player, pos in self.destination_points.items():
                        if pos == [i, j]:
                            print("D", end=" ")  # Destination point
                            found_player = True
                            break
                if not found_player:
                    print("-", end=" ")  # Empty cell
            print()  # Move to next row
        print()  # Add space after grid


def grade_game(grade, num_players):
    grid_size = 4 + grade  # Increase grid size with grade level
    game = WanderingGame(grid_size, num_players)
    game.initialize_game()

    wins = {chr(ord('A') + i): 0 for i in range(num_players)}
    losses = {chr(ord('A') + i): 0 for i in range(num_players)}

    print("\nWelcome to Wandering in the Woods Game!")
    print("\nInstructions:")
    print("You are represented by letters 'A' to '{}'. Each player has their own destination point 'D'.".format(chr(ord('A') + num_players - 1)))
    print("Move your player around the grid to reach your destination point.")
    print("Use the following commands for movement:")
    print("    'w' or 'up'    - Move up")
    print("    's' or 'down'  - Move down")
    print("    'a' or 'left'  - Move left")
    print("    'd' or 'right' - Move right")
    print("Objective: Reach your destination point 'D'.")
    input("Press Enter to start...")

    while True:
        for player in game.player_positions.keys():
            game.display_grid()
            direction = input("Player {}: Enter direction (or 'q' to quit): ".format(player)).lower()
            if direction == 'w' or direction == 'up':
                game.move_player(player, 'up')
            elif direction == 's' or direction == 'down':
                game.move_player(player, 'down')
            elif direction == 'a' or direction == 'left':
                game.move_player(player, 'left')
            elif direction == 'd' or direction == 'right':
                game.move_player(player, 'right')
            elif direction == 'q':  # Quit the game
                print("Thanks for playing!")
                return
            # Check if player reached destination
            if game.check_win_condition(player):
                print("Player {} has reached their destination!".format(player))
                wins[player] += 1
                for other_player in game.player_positions.keys():
                    if other_player != player:
                        losses[other_player] += 1
                print("Wins:", wins)
                print("Losses:", losses)
                rematch = input("Do you want a rematch? (yes/no): ").lower()
                if rematch == 'yes'or'y':
                    game.initialize_game()
                else:
                    return

def main():
    print("Welcome to Wandering in the Woods Game!")
    print("Select your mode:")
    print("1. Single Player")
    print("2. Multiplayer")
    choice = int(input("Enter your choice (1-2): "))
    
    if choice == 1:
        print("\nSelect your grade level:")
        print("1. K-2")
        print("2. 3-5")
        print("3. 6-8")
        grade = int(input("Enter your choice (1-3): "))
        num_players = 1
        if grade == 1:
            print("\nK-2 Version:")
            grade_game(1, num_players)
        elif grade == 2:
            print("\n3-5 Version:")
            grade_game(2, num_players)
        elif grade == 3:
            print("\n6-8 Version:")
            grade_game(3, num_players)
        else:
            print("Invalid choice. Please select either 1, 2, or 3.")
    elif choice == 2:
        print("\nMultiplayer Mode:")
        grade = int(input("Select your grade level (1-3): "))
        num_players = int(input("Enter the number of players (1-4): "))
        if num_players < 1 or num_players > 4:
            print("Invalid number of players. Please enter a number between 1 and 4.")
            return
        if grade < 1 or grade > 3:
            print("Invalid grade level. Please select a grade level between 1 and 3.")
            return
        print("\nStarting the game...")
        grade_game(grade, num_players)
    else:
        print("Invalid choice. Please select either 1 or 2.")

if __name__ == "__main__":
    main()
